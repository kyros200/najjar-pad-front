{"version":3,"sources":["reportWebVitals.js","components/Children.js","components/Editor.js","components/Modal.js","components/MainPage.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Children","props","children","length","className","map","c","onClick","window","location","href","ReactMarkdown","require","gfm","Editor","value","markdown","style","height","fontFamily","onChange","e","setMarkdown","text","renderHTML","remarkPlugins","placeholder","config","view","menu","md","html","markdownClass","Modal","isOpen","errorMsg","ariaHideApp","content","top","left","right","bottom","marginRight","transform","borderRadius","maxHeight","maxWidth","shouldCloseOnOverlayClick","back_url","MainPage","useState","idPad","setIdPad","setChildren","setErrorMsg","idPadRef","useRef","current","markdownRef","savePad","fetch","pathname","method","headers","body","JSON","stringify","id_pad","res","json","data","useEffect","success","interval","setInterval","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a73b7da4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"../css/main.css\";\r\nimport \"../css/children.css\";\r\n\r\nfunction Children(props) {\r\n    const renderChildren = () => {\r\n        return props.children.map((c) => \r\n            <div key={c} className={`childrenButton`} onClick={() => window.location.href = `${window.location.href}/${c}`}>\r\n                {c}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        props.children.length > 0 \r\n        ? \r\n        <div className={`childrenContainer`}>\r\n            <div className={`title`}>\r\n                najjar-pad\r\n            </div>\r\n            {renderChildren()}\r\n        </div>\r\n        :\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default Children;","import ReactEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport \"../css/main.css\";\r\nimport \"../css/editor.css\";\r\nconst ReactMarkdown = require('react-markdown');\r\nconst gfm = require('remark-gfm');\r\n\r\nfunction Editor(props) {\r\n    return (\r\n        <div className={`editor`}>\r\n            <ReactEditor\r\n                value={props.markdown}\r\n                style={{\r\n                    height: \"100%\",\r\n                    fontFamily:\"Kufam\"\r\n                }}\r\n                onChange={(e) => props.setMarkdown(e.text)}\r\n                renderHTML={(text) => <ReactMarkdown remarkPlugins={[gfm]}>{text}</ReactMarkdown>}\r\n                placeholder={`this pad is empty!`}\r\n                config={{\r\n                    view: { menu: true, md: true, html: true },\r\n                    markdownClass: `md`\r\n                }}\r\n            >\r\n                {props.markdown}\r\n            </ReactEditor>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor;","import ReactModal from 'react-modal';\r\nimport \"../css/main.css\";\r\n\r\nfunction Modal(props) {\r\n    const modalStyle = {\r\n        content : {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            borderRadius: \"16px\",\r\n            maxHeight: \"90%\",\r\n            maxWidth: \"90%\"\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ReactModal\r\n                isOpen={!!props.errorMsg}\r\n                ariaHideApp={false}\r\n                style={modalStyle}\r\n                shouldCloseOnOverlayClick={false}\r\n            >\r\n                {props.errorMsg}\r\n            </ReactModal>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Modal;","import { useState, useEffect, useRef } from \"react\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport \"../css/main.css\";\r\n\r\nimport Children from './Children';\r\nimport Editor from './Editor';\r\nimport Modal from './Modal';\r\n\r\n// const back_url = `http://localhost:80`;\r\nconst back_url = `https://najjar-pad.herokuapp.com`;\r\n\r\nfunction MainPage() {\r\n    const [idPad, setIdPad] = useState();\r\n    const [markdown, setMarkdown] = useState(\"\");\r\n    const [children, setChildren] = useState([]);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n    const idPadRef = useRef(idPad);\r\n    idPadRef.current = idPad;\r\n\r\n    const markdownRef = useRef(markdown);\r\n    markdownRef.current = markdown;\r\n\r\n    const getPad = () => {\r\n        fetch(`${back_url}/pad${window.location.pathname}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            if(data.success) {\r\n                if(data.data) { //EXISTING PAD\r\n                    setIdPad(data.data.id_pad);\r\n                    setMarkdown(data.data.markdown);\r\n                    setChildren(data.children);\r\n                }\r\n            } else {\r\n                setErrorMsg(data.data);\r\n            }\r\n        });\r\n    }\r\n\r\n    const savePad = () => {\r\n        if(markdownRef.current) {\r\n            fetch(`${back_url}/pad${window.location.pathname}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id_pad: idPadRef.current,\r\n                    markdown: markdownRef.current,\r\n                })\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if(typeof data !== \"string\") { //insert\r\n                    idPadRef.current = data[0];\r\n                    setIdPad(data[0]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPad();\r\n        const interval = setInterval(savePad, 5000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n    \r\n    return (\r\n        <div className={`container`}>\r\n            <Children children={children} />\r\n            <Editor markdown={markdown} setMarkdown={setMarkdown} />\r\n            <Modal errorMsg={errorMsg} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport MainPage from './components/MainPage'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}